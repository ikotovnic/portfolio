{"ast":null,"code":"import * as Three from 'three';\nimport Handsfree from 'handsfree';\nimport { TweenMax } from \"gsap\";\nexport default {\n  name: 'ThreeTest',\n\n  data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null,\n      mouseX: 0,\n      mouseY: 0,\n      rot: 0,\n      handsfree: null,\n      movex: 0,\n      movey: 0,\n      x: true\n    };\n  },\n\n  methods: {\n    init: function () {\n      let container = document.getElementById('container');\n      this.camera = new Three.PerspectiveCamera(70, container.clientWidth / container.clientHeight, 0.01, 10);\n      this.camera.position.z = 4;\n      this.scene = new Three.Scene();\n      let geometry = new Three.BoxGeometry(0.2, 0.2, 0.2);\n      let material = new Three.MeshNormalMaterial();\n      this.mesh = new Three.Mesh(geometry, material);\n      this.scene.add(this.mesh);\n      this.renderer = new Three.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n      this.renderer.setSize(container.clientWidth, container.clientHeight);\n      this.renderer.autoClear = false;\n      this.renderer.setClearColor(0x000000, 0.0);\n      container.appendChild(this.renderer.domElement);\n      document.addEventListener('mousemove', onDocumentMouseMove, false);\n\n      function onDocumentMouseMove(event) {\n        this.mouseX = event.clientX - window.innerWidth / 2;\n        this.mouseY = event.clientY - window.screen.height / 2; //console.log(this.mouseX)\n      }\n    },\n    handcam: function () {\n      this.handsfree = new Handsfree({\n        weboji: {\n          // Whether the model is enabled or not\n          enabled: true,\n          // Custom video settings\n          videoSettings: {\n            // The video, canvas, or image element\n            // Omit this to auto create a <VIDEO> with the webcam\n            videoElement: null,\n            // ID of the device to use\n            // Omit this to use the system default\n            deviceId: null,\n            // Which camera to use on the device\n            // Possible values: 'user' (front), 'environment' (back)\n            facingMode: 'user',\n            // Video dimensions\n            idealWidth: 320,\n            idealHeight: 240,\n            minWidth: 240,\n            maxWidth: 320,\n            minHeight: 240,\n            maxHeight: 240\n          },\n          // Thresholds needed before these are considered \"activated\"\n          // - Ranges from 0 (not active) to 1 (fully active)\n          morphs: {\n            threshold: {\n              smileRight: 0,\n              smileLeft: 0,\n              browLeftDown: 0,\n              browRightDown: 0,\n              browLeftUp: 0,\n              browRightUp: 0,\n              eyeLeftClosed: 0,\n              eyeRightClosed: 0,\n              mouthOpen: 0,\n              mouthRound: 0,\n              upperLip: 0\n            }\n          }\n        }\n      }); // From inside a plugin\n\n      this.handsfree.use('lookHandsfree', ({\n        weboji\n      }) => {\n        if (!weboji?.rotation?.[0]) return; // Calculate rotation\n\n        this.rot = weboji.rotation; //document.getElementById(\"xposcube\").innerHTML = handPosition.x;\n        //document.getElementById(\"yposcube\").innerHTML = handPosition.y;\n        //document.getElementById(\"zposcube\").innerHTML = rot[2];\n      }); //handsfree.enablePlugins('browser');\n\n      var constraints = {\n        audio: false,\n        video: {\n          width: 1280,\n          height: 720\n        }\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(mediaStream => {\n        console.log('camera go');\n        this.handsfree.start();\n        console.log(mediaStream);\n      }).catch(function (err) {\n        console.log('camera null');\n        console.log(err); // обработка ошибки\n      });\n    },\n    ///////////////////////////////////handsfree\n    animate: function () {\n      requestAnimationFrame(this.animate);\n      this.mesh.rotation.x += 0.01;\n      this.mesh.rotation.y += 0.02;\n\n      if (this.rot[1]) {\n        TweenMax.to(this, 1, {\n          movex: this.rot[1],\n          movey: -this.rot[0]\n        });\n        this.mesh.position.x = this.movex * 5;\n        this.mesh.position.y = this.movey * 5;\n        this.camera.position.y = -1;\n      }\n\n      this.renderer.render(this.scene, this.camera);\n    }\n  },\n\n  mounted() {\n    this.handcam();\n    this.init();\n    this.animate();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["Three","Handsfree","TweenMax","name","data","camera","scene","renderer","mesh","mouseX","mouseY","rot","handsfree","movex","movey","x","methods","init","container","document","getElementById","PerspectiveCamera","clientWidth","clientHeight","position","z","Scene","geometry","BoxGeometry","material","MeshNormalMaterial","Mesh","add","WebGLRenderer","antialias","alpha","setSize","autoClear","setClearColor","appendChild","domElement","addEventListener","onDocumentMouseMove","event","clientX","window","innerWidth","clientY","screen","height","handcam","weboji","enabled","videoSettings","videoElement","deviceId","facingMode","idealWidth","idealHeight","minWidth","maxWidth","minHeight","maxHeight","morphs","threshold","smileRight","smileLeft","browLeftDown","browRightDown","browLeftUp","browRightUp","eyeLeftClosed","eyeRightClosed","mouthOpen","mouthRound","upperLip","use","rotation","constraints","audio","video","width","navigator","mediaDevices","getUserMedia","then","mediaStream","console","log","start","catch","err","animate","requestAnimationFrame","y","to","render","mounted"],"sourceRoot":"","sources":["/Users/mac-ikotov/Sites/vue/test3/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"container\"></div>\n  </div>\n</template>\n\n<script>\n  import * as Three from 'three'\n  import Handsfree from 'handsfree'\n  import { TweenMax } from \"gsap\"\n\n  export default {\n    name: 'ThreeTest',\n    data () {\n      return {\n        camera: null,\n        scene: null,\n        renderer: null,\n        mesh: null,\n        mouseX: 0,\n        mouseY: 0,\n        rot:0,\n        handsfree: null,\n        movex: 0,\n        movey: 0,\n        x:true\n      }\n    },\n    methods: {\n      init: function () {\n        let container = document.getElementById('container')\n        this.camera = new Three.PerspectiveCamera(70, container.clientWidth / container.clientHeight, 0.01, 10)\n        this.camera.position.z = 4;\n        this.scene = new Three.Scene()\n        let geometry = new Three.BoxGeometry(0.2, 0.2, 0.2)\n        let material = new Three.MeshNormalMaterial()\n        this.mesh = new Three.Mesh(geometry, material)\n        this.scene.add(this.mesh)\n\n        this.renderer = new Three.WebGLRenderer({antialias: true, alpha: true })\n        this.renderer.setSize(container.clientWidth, container.clientHeight)\n        this.renderer.autoClear = false;\n        this.renderer.setClearColor(0x000000, 0.0);\n        container.appendChild(this.renderer.domElement)\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n        function onDocumentMouseMove( event ) {\n          this.mouseX = ( event.clientX - window.innerWidth / 2 )\n          this.mouseY = ( event.clientY - window.screen.height / 2 )\n          //console.log(this.mouseX)\n        }\n      },\n      handcam: function() {\n         \n        this.handsfree = new Handsfree({\n          weboji: {\n            // Whether the model is enabled or not\n            enabled: true,\n              // Custom video settings\n            videoSettings: {\n              // The video, canvas, or image element\n              // Omit this to auto create a <VIDEO> with the webcam\n              videoElement: null,\n\n              // ID of the device to use\n              // Omit this to use the system default\n              deviceId: null,\n\n              // Which camera to use on the device\n              // Possible values: 'user' (front), 'environment' (back)\n              facingMode: 'user',\n\n              // Video dimensions\n              idealWidth: 320,\n              idealHeight: 240,\n              minWidth: 240,\n              maxWidth: 320,\n              minHeight: 240,\n              maxHeight: 240\n            },\n            // Thresholds needed before these are considered \"activated\"\n            // - Ranges from 0 (not active) to 1 (fully active)\n            morphs: {\n              threshold: {\n                smileRight: 0,\n                smileLeft: 0,\n                browLeftDown: 0,\n                browRightDown: 0,\n                browLeftUp: 0,\n                browRightUp: 0,\n                eyeLeftClosed: 0,\n                eyeRightClosed: 0,\n                mouthOpen: 0,\n                mouthRound: 0,\n                upperLip: 0\n              }\n            }\n          }\n        })\n        // From inside a plugin\n        this.handsfree.use('lookHandsfree', ({weboji}) => {\n          if (!weboji?.rotation?.[0]) return\n          // Calculate rotation\n          this.rot = weboji.rotation\n\n          //document.getElementById(\"xposcube\").innerHTML = handPosition.x;\n          //document.getElementById(\"yposcube\").innerHTML = handPosition.y;\n          //document.getElementById(\"zposcube\").innerHTML = rot[2];\n        })\n        //handsfree.enablePlugins('browser');\n        var constraints = { audio: false, video: { width: 1280, height: 720 } };\n\n        navigator.mediaDevices.getUserMedia(constraints)\n        .then( mediaStream => {\n          console.log('camera go')\n          this.handsfree.start()\n\n          console.log(mediaStream)\n\n        })\n        .catch(function(err) {\n          console.log('camera null')\n          console.log(err)\n          // обработка ошибки\n        });\n      },\n\n///////////////////////////////////handsfree\n      animate: function () {\n        requestAnimationFrame(this.animate)\n\n\n        this.mesh.rotation.x += 0.01\n        this.mesh.rotation.y += 0.02\n\n        if(this.rot[1]){\n          TweenMax.to(this, 1, { movex:this.rot[1], movey:-this.rot[0] })\n          this.mesh.position.x = this.movex * 5;\n          this.mesh.position.y = this.movey * 5;\n          this.camera.position.y = -1;\n        }\n\n        this.renderer.render(this.scene, this.camera)\n      }\n    },\n    mounted () {\n      this.handcam()\n      this.init()\n      this.animate()\n    }\n  }\n</script>\n<style>\n  #container {\n    height: 80vh;\n    background-color: black;\n  }\n\n  :root {\n  --main-page-pad: 0px 45px 40px 125px;\n  --color-accent:  #F5B40D;\n}\n\nbody{\n  background-color: #110F1A;\n  /*cursor: none;*/\n  /* working one */\n}\n.handsfree-debugger{\n  display: none;\n}\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}