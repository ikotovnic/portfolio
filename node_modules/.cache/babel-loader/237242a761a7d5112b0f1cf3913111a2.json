{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as Three from 'three';\nimport Handsfree from 'handsfree';\nimport { TweenMax } from \"gsap\";\nexport default {\n  name: 'FirstScreen',\n  data: function data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null,\n      meshBaloon: null,\n      loader: null,\n      mouseX: 0,\n      mouseY: 0,\n      rot: 0,\n      handsfree: null,\n      movex: 0,\n      movey: 0,\n      x: true,\n      maintitle1: null,\n      maintitle2: null,\n      maintitle3: null,\n      maintitle4: null,\n      titleList: null,\n      move: null\n    };\n  },\n  methods: {\n    changeTitle: function changeTitle(a, b, c, d) {\n      var _this = this;\n\n      this.titleList = document.getElementById('TitleList');\n      this.maintitle1 = document.getElementById('maintitle1');\n      this.maintitle2 = document.getElementById('maintitle2');\n      this.maintitle3 = document.getElementById('maintitle3');\n      this.maintitle4 = document.getElementById('maintitle4');\n      this.maintitle1.style.opacity = a + \"\";\n      this.maintitle2.style.opacity = b + \"\";\n      this.maintitle3.style.opacity = c + \"\";\n      this.maintitle4.style.opacity = d + \"\";\n\n      if (a == 1) {\n        setTimeout(function () {\n          return _this.titleList.appendChild(_this.maintitle1);\n        }, 1000);\n      }\n\n      if (b == 1) {\n        setTimeout(function () {\n          return _this.titleList.appendChild(_this.maintitle2);\n        }, 1000);\n      }\n\n      if (c == 1) {\n        setTimeout(function () {\n          return _this.titleList.appendChild(_this.maintitle3);\n        }, 1000);\n      }\n\n      if (d == 1) {\n        setTimeout(function () {\n          return _this.titleList.appendChild(_this.maintitle4);\n        }, 1000);\n      }\n    },\n    init: function init() {\n      var container = document.getElementById('container');\n      this.camera = new Three.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 0.1, 120);\n      this.camera.position.z = 11;\n      this.scene = new Three.Scene();\n      var lightA = new Three.AmbientLight(0xeaeaea); // soft white light\n\n      this.scene.add(lightA);\n      var light1 = new Three.DirectionalLight(0xF2453A, 0.75);\n      light1.position.set(500, 0, 0);\n      this.scene.add(light1);\n      var light2 = new Three.DirectionalLight(0x229AF1, 0.25);\n      light2.position.set(-500, 0, 0);\n      this.scene.add(light2);\n      var geometry = new Three.SphereGeometry(1, 32, 16);\n      /*\n      const geometry = new Three.BufferGeometry();\n      const vertices = new Float32Array( [\n        -1.0, -1.0,  1.0,\n         1.0, -10,  1.0,\n         1.0,  1.0,  1.0,\n          10,  1.0,  1.0,\n        -1.0,  1.0,  10,\n        -1.0, -10,  1.0\n      ] );\n      geometry.setAttribute( 'position', new Three.BufferAttribute( vertices, 3 ) );\n      */\n\n      var texture = new Three.TextureLoader().load('img/smile.98038d7b.jpg'); // immediately use the texture for material creation\n\n      var material = new Three.MeshStandardMaterial({\n        map: texture\n      });\n      material.roughness = 0.3;\n      material.metalness = 0.3;\n      this.mesh = new Three.Mesh(geometry, material);\n      this.mesh.rotation.y = 4;\n      this.mesh.position.x = 0;\n      this.mesh.position.y = 0;\n      this.mesh.position.z = 0;\n      this.mesh.rotation.x = 0;\n      this.mesh.rotation.y = 5;\n      this.mesh.rotation.z = 0;\n      this.mesh.scale.x = 1;\n      this.mesh.scale.y = 1;\n      this.mesh.scale.x = 1;\n      this.scene.add(this.mesh);\n      this.renderer = new Three.WebGLRenderer({\n        antialias: false,\n        alpha: true\n      });\n      this.renderer.setSize(window.innerWidth / 5, window.innerHeight / 5, false);\n      this.renderer.autoClear = false;\n      this.renderer.setClearColor(0x000000, 0.0);\n      container.appendChild(this.renderer.domElement);\n      window.addEventListener('resize', onWindowResize, false);\n      var a = this.camera;\n      var b = this.renderer;\n\n      function onWindowResize() {\n        a.aspect = window.innerWidth / window.innerHeight;\n        a.updateProjectionMatrix();\n        b.setSize(window.innerWidth / 5, window.innerHeight / 5, false);\n      }\n\n      this.changeTitle(1, 0, 0, 0);\n    },\n    handcam: function handcam() {\n      var _this2 = this;\n\n      this.changeTitle(0, 1, 0, 0);\n      this.handsfree = new Handsfree({\n        weboji: {\n          // Whether the model is enabled or not\n          enabled: true,\n          // Custom video settings\n          videoSettings: {\n            // The video, canvas, or image element\n            // Omit this to auto create a <VIDEO> with the webcam\n            videoElement: null,\n            // ID of the device to use\n            // Omit this to use the system default\n            deviceId: null,\n            // Which camera to use on the device\n            // Possible values: 'user' (front), 'environment' (back)\n            facingMode: 'user',\n            // Video dimensions\n            idealWidth: 320,\n            idealHeight: 240,\n            minWidth: 240,\n            maxWidth: 320,\n            minHeight: 240,\n            maxHeight: 240\n          },\n          // Thresholds needed before these are considered \"activated\"\n          // - Ranges from 0 (not active) to 1 (fully active)\n          morphs: {\n            threshold: {\n              smileRight: 0,\n              smileLeft: 0,\n              browLeftDown: 0,\n              browRightDown: 0,\n              browLeftUp: 0,\n              browRightUp: 0,\n              eyeLeftClosed: 0,\n              eyeRightClosed: 0,\n              mouthOpen: 0,\n              mouthRound: 0,\n              upperLip: 0\n            }\n          }\n        }\n      }); //console.log(this.handsfree.model.weboji=null)\n      // From inside a plugin\n\n      this.handsfree.use('lookHandsfree', function (_ref) {\n        var _weboji$rotation;\n\n        var weboji = _ref.weboji;\n        if (!(weboji !== null && weboji !== void 0 && (_weboji$rotation = weboji.rotation) !== null && _weboji$rotation !== void 0 && _weboji$rotation[0])) return; // Calculate rotation\n\n        _this2.rot = weboji.rotation; //document.getElementById(\"xposcube\").innerHTML = handPosition.x;\n        //document.getElementById(\"yposcube\").innerHTML = handPosition.y;\n        //document.getElementById(\"zposcube\").innerHTML = rot[2];\n      }); //handsfree.enablePlugins('browser');\n\n      var constraints = {\n        audio: false,\n        video: {\n          width: 1280,\n          height: 720\n        }\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(function (mediaStream) {\n        console.log('camera go');\n\n        _this2.changeTitle(0, 0, 1, 0);\n\n        _this2.handsfree.start();\n\n        console.log(mediaStream);\n      }).catch(function (err) {\n        console.log('camera null');\n        console.log(err); // обработка ошибки\n      });\n    },\n    ///////////////////////////////////handsfree\n    animate: function animate() {\n      requestAnimationFrame(this.animate); //console.log(this.mouseX, this.mouseY)\n\n      if (!this.rot[1]) {\n        this.mesh.position.x += (this.mouseX * 0.01 - this.mesh.position.x) * 0.03;\n        this.mesh.position.y += (-this.mouseY * 0.01 - this.mesh.position.y) * 0.03;\n        this.mesh.rotation.y += this.mouseX * 0.0001; //this.mesh.rotation.x += this.mouseY * 0.0001\n        //this.mesh.rotation.z = this.mouseX * 0.001\n        //this.mesh.rotation.y += (4+ this.mouseX * 0.002 - this.mesh.rotation.y) * 0.03\n\n        this.mesh.rotation.x += (4 + this.mouseY * 0.002 - this.mesh.rotation.x) * 0.03;\n        this.mesh.rotation.z += (4 + this.mouseX * 0.002 - this.mesh.rotation.z) * 0.03;\n      }\n\n      if (this.rot[1]) {\n        TweenMax.to(this, 1, {\n          movex: this.rot[1],\n          movey: -this.rot[0]\n        });\n        this.mesh.position.x = this.movex * 5;\n        this.mesh.position.y = this.movey * 5;\n        this.camera.position.y = -1;\n      }\n\n      this.renderer.render(this.scene, this.camera);\n    },\n    getMousePos: function getMousePos(event) {\n      this.mouseX = event.clientX - window.innerWidth / 2;\n      this.mouseY = event.clientY - window.innerHeight / 2;\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.animate();\n    document.addEventListener('mousemove', this.getMousePos, false);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AAEA;AACAA,qBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,kBADA;AAEAC,iBAFA;AAGAC,oBAHA;AAIAC,gBAJA;AAKAC,sBALA;AAMAC,kBANA;AAOAC,eAPA;AAQAC,eARA;AASAC,YATA;AAUAC,qBAVA;AAWAC,cAXA;AAYAC,cAZA;AAaAC,aAbA;AAcAC,sBAdA;AAeAC,sBAfA;AAgBAC,sBAhBA;AAiBAC,sBAjBA;AAkBAC,qBAlBA;AAmBAC;AAnBA;AAqBA,GAxBA;AA0BAC;AAEAC;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACAC;AAAA;AAAA;AACA;;AACA;AACAA;AAAA;AAAA;AACA;;AACA;AACAA;AAAA;AAAA;AACA;;AACA;AACAA;AAAA;AAAA;AACA;AACA,KAxBA;AAyBAC;AACA;AACA;AACA;AACA;AAEA,oDANA,CAMA;;AACA;AAEA;AACAC;AACA;AAEA;AACAC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA,6EAjCA,CAkCA;;AACA;AAAAC;AAAA;AACAC;AACAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAAC;AAAAC;AAAA;AACA;AACA;AACA;AACAC;AACAC;AAEA;AACA;;AACA;AACAC;AACAA;AACAC;AACA;;AAEA;AACA,KA7FA;AA8FAC;AAAA;;AACA;AACA;AACAC;AACA;AACAC,uBAFA;AAGA;AACAC;AACA;AACA;AACAC,8BAHA;AAKA;AACA;AACAC,0BAPA;AASA;AACA;AACAC,8BAXA;AAaA;AACAC,2BAdA;AAeAC,4BAfA;AAgBAC,yBAhBA;AAiBAC,yBAjBA;AAkBAC,0BAlBA;AAmBAC;AAnBA,WAJA;AAyBA;AACA;AACAC;AACAC;AACAC,2BADA;AAEAC,0BAFA;AAGAC,6BAHA;AAIAC,8BAJA;AAKAC,2BALA;AAMAC,4BANA;AAOAC,8BAPA;AAQAC,+BARA;AASAC,0BATA;AAUAC,2BAVA;AAWAC;AAXA;AADA;AA3BA;AADA,SAFA,CA+CA;AACA;;AACA;AAAA;;AAAA;AACA,mKADA,CAEA;;AACA,qCAHA,CAKA;AACA;AACA;AACA,OARA,EAjDA,CA0DA;;AACA;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;AAAA;AAEAC,uDACAC,IADA,CACA;AACAC;;AACA;;AACA;;AACAA;AAEA,OAPA,EAQAC,KARA,CAQA;AAEAD;AACAA,yBAHA,CAIA;AAEA,OAdA;AAeA,KA1KA;AA4KA;AACAE;AACAC,0CADA,CAGA;;AAEA;AACA;AACA;AACA,qDAHA,CAKA;AACA;AAEA;;AACA;AACA;AACA;;AAEA;AACAC;AAAA3D;AAAAC;AAAA;AACA;AACA;AACA;AACA;;AACA;AACA,KAtMA;AAuMA2D,eAvMA,uBAuMAC,KAvMA,EAuMA;AACA;AACA;AACA;AA1MA,GA1BA;AAsOAC,SAtOA,qBAsOA;AACA;AACA;AACAC;AACA;AA1OA","names":["name","data","camera","scene","renderer","mesh","meshBaloon","loader","mouseX","mouseY","rot","handsfree","movex","movey","x","maintitle1","maintitle2","maintitle3","maintitle4","titleList","move","methods","changeTitle","setTimeout","init","light1","light2","map","material","antialias","alpha","container","window","a","b","handcam","weboji","enabled","videoSettings","videoElement","deviceId","facingMode","idealWidth","idealHeight","minWidth","maxWidth","minHeight","maxHeight","morphs","threshold","smileRight","smileLeft","browLeftDown","browRightDown","browLeftUp","browRightUp","eyeLeftClosed","eyeRightClosed","mouthOpen","mouthRound","upperLip","audio","video","width","height","navigator","then","console","catch","animate","requestAnimationFrame","TweenMax","getMousePos","event","mounted","document"],"sourceRoot":"src/components","sources":["FirstScreen.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"maintitle fadeel\" id=\"TitleList\">\n      <div>\n        <div class=\"text two\" id=\"maintitle2\">\n          <p><br>Good<br>Please,<br>allow<br>camera<br>access</p>\n        </div>\n        <div class=\"text three\" id=\"maintitle3\">\n          <p>Control<br>balloon<br>with<br>your<br>head,<br><a href=\"#\" v-on:click=\"handsfree.stop()\">to stop</a><br>click here</p>\n        </div>\n        <div class=\"text one\" id=\"maintitle4\">\n          <p>Oops!<br>something<br>went<br>wrong<br>to refresh<br>page<br><a href=\"#\">click here</a></p>\n        </div>\n        <div class=\"text one\" id=\"maintitle1\">\n          <p>Hello!<br>please<br> <a href=\"#\" v-on:click=\"handcam()\">click here</a> <br>to explore<br>balloon<br>camera<br>control</p>\n        </div>\n      </div>\n      <div class=\"scroll1container\">\n        <div class=\"scroll1\"></div>\n      </div>\n    </div>\n\n    <div id=\"container\" class=\"container\"></div>\n    <div class=\"textureface\" ></div>\n  </div>\n</template>\n\n<script>\n  import * as Three from 'three'\n  import Handsfree from 'handsfree'\n  import { TweenMax } from \"gsap\"\n\n  export default {\n    name: 'FirstScreen',\n    data () {\n      return {\n        camera: null,\n        scene: null,\n        renderer: null,\n        mesh: null,\n        meshBaloon: null,\n        loader: null,\n        mouseX: 0,\n        mouseY: 0,\n        rot:0,\n        handsfree: null,\n        movex: 0,\n        movey: 0,\n        x:true,\n        maintitle1: null,\n        maintitle2: null,\n        maintitle3: null,\n        maintitle4: null,\n        titleList: null,\n        move: null\n      }\n    },\n\n    methods: {\n\n      changeTitle: function(a,b,c,d){\n        this.titleList = document.getElementById('TitleList')\n        this.maintitle1 = document.getElementById('maintitle1')\n        this.maintitle2 = document.getElementById('maintitle2')\n        this.maintitle3 = document.getElementById('maintitle3')\n        this.maintitle4 = document.getElementById('maintitle4')\n        this.maintitle1.style.opacity = a + \"\"\n        this.maintitle2.style.opacity = b + \"\"\n        this.maintitle3.style.opacity = c + \"\"\n        this.maintitle4.style.opacity = d + \"\"\n        if(a==1){\n          setTimeout(() => this.titleList.appendChild(this.maintitle1), 1000)\n        }\n        if(b==1){\n          setTimeout(() => this.titleList.appendChild(this.maintitle2), 1000)\n        }\n        if(c==1){\n          setTimeout(() => this.titleList.appendChild(this.maintitle3), 1000)\n        }\n        if(d==1){\n          setTimeout(() => this.titleList.appendChild(this.maintitle4), 1000)\n        }\n      },\n      init: function () {\n        let container = document.getElementById('container')  \n        this.camera = new Three.PerspectiveCamera(35, window.innerWidth / window.innerHeight, 0.1, 120)\n        this.camera.position.z = 11;\n        this.scene = new Three.Scene()\n\n        var lightA = new Three.AmbientLight( 0xeaeaea ); // soft white light\n        this.scene.add( lightA )\n\n        var light1 = new Three.DirectionalLight( 0xF2453A, 0.75 )\n        light1.position.set( 500, 0, 0 )\n        this.scene.add( light1 )\n\n        var light2 = new Three.DirectionalLight( 0x229AF1, 0.25 )\n        light2.position.set( -500, 0, 0 )\n        this.scene.add( light2 )\n\n        let geometry = new Three.SphereGeometry(1, 32, 16)\n        /*\n        const geometry = new Three.BufferGeometry();\n        const vertices = new Float32Array( [\n          -1.0, -1.0,  1.0,\n           1.0, -10,  1.0,\n           1.0,  1.0,  1.0,\n\n           10,  1.0,  1.0,\n          -1.0,  1.0,  10,\n          -1.0, -10,  1.0\n        ] );\n        geometry.setAttribute( 'position', new Three.BufferAttribute( vertices, 3 ) );\n        */\n\n        \n        const texture = new Three.TextureLoader().load( 'img/smile.98038d7b.jpg' );\n        // immediately use the texture for material creation\n        const material = new Three.MeshStandardMaterial( { map: texture } )\n        material.roughness = 0.3\n        material.metalness = 0.3\n\n        this.mesh = new Three.Mesh(geometry, material)\n        this.mesh.rotation.y = 4\n        this.mesh.position.x = 0\n        this.mesh.position.y = 0\n        this.mesh.position.z = 0\n        this.mesh.rotation.x=0\n        this.mesh.rotation.y=5\n        this.mesh.rotation.z=0\n        this.mesh.scale.x=1\n        this.mesh.scale.y=1\n        this.mesh.scale.x=1\n        this.scene.add(this.mesh)\n\n        this.renderer = new Three.WebGLRenderer({antialias: false, alpha: true })\n        this.renderer.setSize(window.innerWidth/5, window.innerHeight/5, false)\n        this.renderer.autoClear = false;\n        this.renderer.setClearColor(0x000000, 0.0)\n        container.appendChild(this.renderer.domElement)\n        window.addEventListener( 'resize', onWindowResize, false )\n\n        let a = this.camera\n        let b = this.renderer\n        function onWindowResize() {\n          a.aspect = window.innerWidth / window.innerHeight\n          a.updateProjectionMatrix()\n          b.setSize( window.innerWidth/5, window.innerHeight/5, false)\n        }\n\n        this.changeTitle(1,0,0,0)\n      },\n      handcam: function() {\n        this.changeTitle(0,1,0,0)\n        this.handsfree = new Handsfree({\n          weboji: {\n            // Whether the model is enabled or not\n            enabled: true,\n              // Custom video settings\n            videoSettings: {\n              // The video, canvas, or image element\n              // Omit this to auto create a <VIDEO> with the webcam\n              videoElement: null,\n\n              // ID of the device to use\n              // Omit this to use the system default\n              deviceId: null,\n\n              // Which camera to use on the device\n              // Possible values: 'user' (front), 'environment' (back)\n              facingMode: 'user',\n\n              // Video dimensions\n              idealWidth: 320,\n              idealHeight: 240,\n              minWidth: 240,\n              maxWidth: 320,\n              minHeight: 240,\n              maxHeight: 240\n            },\n            // Thresholds needed before these are considered \"activated\"\n            // - Ranges from 0 (not active) to 1 (fully active)\n            morphs: {\n              threshold: {\n                smileRight: 0,\n                smileLeft: 0,\n                browLeftDown: 0,\n                browRightDown: 0,\n                browLeftUp: 0,\n                browRightUp: 0,\n                eyeLeftClosed: 0,\n                eyeRightClosed: 0,\n                mouthOpen: 0,\n                mouthRound: 0,\n                upperLip: 0\n              }\n            }\n          }\n        })\n        //console.log(this.handsfree.model.weboji=null)\n        // From inside a plugin\n        this.handsfree.use('lookHandsfree', ({weboji}) => {\n          if (!weboji?.rotation?.[0]) return\n          // Calculate rotation\n          this.rot = weboji.rotation\n\n          //document.getElementById(\"xposcube\").innerHTML = handPosition.x;\n          //document.getElementById(\"yposcube\").innerHTML = handPosition.y;\n          //document.getElementById(\"zposcube\").innerHTML = rot[2];\n        })\n        //handsfree.enablePlugins('browser');\n        var constraints = { audio: false, video: { width: 1280, height: 720 } };\n\n        navigator.mediaDevices.getUserMedia(constraints)\n        .then( mediaStream => {\n          console.log('camera go')\n          this.changeTitle(0,0,1,0)\n          this.handsfree.start()\n          console.log(mediaStream)\n\n        })\n        .catch(function(err) {\n\n          console.log('camera null')\n          console.log(err)\n          // обработка ошибки\n\n        });\n      },\n\n///////////////////////////////////handsfree\n      animate: function () {\n        requestAnimationFrame(this.animate)\n\n        //console.log(this.mouseX, this.mouseY)\n\n        if (!this.rot[1]){\n          this.mesh.position.x += (this.mouseX*0.01 - this.mesh.position.x) * 0.03\n          this.mesh.position.y += (-this.mouseY*0.01 - this.mesh.position.y) * 0.03\n          this.mesh.rotation.y += this.mouseX * 0.0001\n\n          //this.mesh.rotation.x += this.mouseY * 0.0001\n          //this.mesh.rotation.z = this.mouseX * 0.001\n\n          //this.mesh.rotation.y += (4+ this.mouseX * 0.002 - this.mesh.rotation.y) * 0.03\n          this.mesh.rotation.x += (4+ this.mouseY * 0.002 - this.mesh.rotation.x) * 0.03\n          this.mesh.rotation.z += (4+ this.mouseX * 0.002 - this.mesh.rotation.z) * 0.03        \n        }\n\n        if(this.rot[1]){\n          TweenMax.to(this, 1, { movex:this.rot[1], movey:-this.rot[0] })\n          this.mesh.position.x = this.movex * 5;\n          this.mesh.position.y = this.movey * 5;\n          this.camera.position.y = -1;\n        } \n        this.renderer.render(this.scene, this.camera)\n      },\n      getMousePos(event){\n        this.mouseX = ( event.clientX - window.innerWidth / 2 )\n        this.mouseY = ( event.clientY - window.innerHeight / 2 )\n      }\n    },\n    mounted () {\n      this.init()\n      this.animate()\n      document.addEventListener( 'mousemove', this.getMousePos, false );\n    }\n  }\n</script>\n<style scoped>\n  canvas{\n    width: 100%;\n    height: 100%;\n  }\n  #container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    margin: 0;\n    padding: 0;\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n  }\n  .container{\n    transition: all 0.5s;\n  }\n\n  .textureface{\n    position: fixed;\n    display: none;\n    background-image: url('../assets/textures/smile.jpg');\n  }\n\n  .maintitle{\n    left: 0px;\n    margin: var(--main-page-pad);\n    display: flex;\n    justify-content: space-between;\n    height: 100vh;\n    color: #fff;\n    padding: 0;\n  }\n  .maintitle a{\n    color:var(--color-accent);\n    text-decoration: none;\n  }\n  .maintitle .text{\n    opacity: 0;\n    position: absolute;\n    transition: all 1s;\n  }\n  .maintitle .one{\n    margin-top: -9px;\n  }\n  .maintitle .two{\n    margin-top: -1px;\n  }\n  .maintitle .text p{\n    font-family: 'Goblin One';\n    font-size: 10vh;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 13vh;\n    letter-spacing: 0em;\n    text-align: left;\n    margin-top: 5%;\n    padding-left: var(--main-page-pad);\n  }\n\n  @-webkit-keyframes rotate {\n    100% {-webkit-transform: rotate(360deg);\n    -ms-transform: rotate(360deg);\n      transform: rotate(360deg);}\n  }\n  @keyframes rotate {\n    100% {-webkit-transform: rotate(360deg);\n    -ms-transform: rotate(360deg);\n      transform: rotate(360deg);}\n  }\n  .maintitle .scroll1container{\n    display: flex;\n    align-items: end;\n    padding-bottom: 5%;\n  }\n  .maintitle .scroll1{\n    background: url(\"../assets/textures/scroll1.svg\") no-repeat center center;\n    width: 80px;\n    height: 80px;\n    margin: 15px;\n     -webkit-animation: rotate 6s linear infinite;\n    animation: rotate 6s linear infinite;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}