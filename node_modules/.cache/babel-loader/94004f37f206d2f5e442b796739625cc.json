{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"maintitle\\\"><div><div class=\\\"text one\\\" id=\\\"maintitle1\\\"><p>Hello!<br>Please,<br>allow<br>camera<br>access<br>for better<br>expirience</p></div><div class=\\\"text two\\\" id=\\\"maintitle2\\\"><p>Okay!<br>Please,<br>use<br>your<br>mouse<br>to move<br>baloon</p></div><div class=\\\"text three\\\" id=\\\"maintitle3\\\"><p>Hello!<br>Please,<br>use<br>your<br>head<br>to<br>move</p></div></div><div class=\\\"scroll1container\\\"><div class=\\\"scroll1\\\"></div></div></div><div id=\\\"container\\\"></div>\", 2);\n\nconst _hoisted_3 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_3);\n}","map":{"version":3,"mappings":";;;;oBAEIA;;uBADFC,oBAmBM,KAnBN,EAmBM,IAnBN,EAmBMC,UAnBN","names":["_hoisted_1","_createElementBlock","_hoisted_3"],"sourceRoot":"","sources":["/Users/mac-ikotov/Sites/vue/test3/src/components/FirstScreen.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"maintitle\">\n      <div>\n        <div class=\"text one\" id=\"maintitle1\">\n          <p>Hello!<br>Please,<br>allow<br>camera<br>access<br>for better<br>expirience</p>\n        </div>\n        <div class=\"text two\" id=\"maintitle2\">\n          <p>Okay!<br>Please,<br>use<br>your<br>mouse<br>to move<br>baloon</p>\n        </div>\n        <div class=\"text three\" id=\"maintitle3\">\n          <p>Hello!<br>Please,<br>use<br>your<br>head<br>to<br>move</p>\n        </div>\n      </div>\n      <div class=\"scroll1container\">\n        <div class=\"scroll1\"></div>\n      </div>\n    </div>\n\n    <div id=\"container\"></div>\n  </div>\n</template>\n\n<script>\n  import * as Three from 'three'\n  import Handsfree from 'handsfree'\n  import { TweenMax } from \"gsap\"\n\n  export default {\n    name: 'FirstScreen',\n    data () {\n      return {\n        camera: null,\n        scene: null,\n        renderer: null,\n        mesh: null,\n        mouseX: 0,\n        mouseY: 0,\n        rot:0,\n        handsfree: null,\n        movex: 0,\n        movey: 0,\n        x:true\n      }\n    },\n    methods: {\n      init: function () {\n        let container = document.getElementById('container')  \n        this.camera = new Three.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 10)\n        this.camera.position.z = 4;\n        this.scene = new Three.Scene()\n        let geometry = new Three.BoxGeometry(0.2, 0.2, 0.2)\n        let material = new Three.MeshNormalMaterial()\n        this.mesh = new Three.Mesh(geometry, material)\n        this.scene.add(this.mesh)\n\n        this.renderer = new Three.WebGLRenderer({antialias: true, alpha: true })\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\n        this.renderer.autoClear = false;\n        this.renderer.setClearColor(0x000000, 0.0);\n        container.appendChild(this.renderer.domElement)\n        window.addEventListener( 'resize', onWindowResize, false )\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n        function onDocumentMouseMove( event ) {\n          this.mouseX = ( event.clientX - window.innerWidth / 2 )\n          this.mouseY = ( event.clientY - window.screen.height / 2 )\n          //console.log(this.mouseX)\n        }\n        let a = this.camera\n        let b = this.renderer\n        function onWindowResize() {\n          a.aspect = window.innerWidth / window.innerHeight\n          a.updateProjectionMatrix()\n          b.setSize( window.innerWidth, window.innerHeight)\n        }\n\n        let maintitle1 = document.getElementById('maintitle1');\n        let maintitle2 = document.getElementById('maintitle2');\n        let maintitle3 = document.getElementById('maintitle3');\n        maintitle1.style.opacity = \"1\";\n        maintitle2.style.opacity = \"0\";\n        maintitle3.style.opacity = \"0\";\n\n      },\n      handcam: function() {\n         \n        this.handsfree = new Handsfree({\n          weboji: {\n            // Whether the model is enabled or not\n            enabled: true,\n              // Custom video settings\n            videoSettings: {\n              // The video, canvas, or image element\n              // Omit this to auto create a <VIDEO> with the webcam\n              videoElement: null,\n\n              // ID of the device to use\n              // Omit this to use the system default\n              deviceId: null,\n\n              // Which camera to use on the device\n              // Possible values: 'user' (front), 'environment' (back)\n              facingMode: 'user',\n\n              // Video dimensions\n              idealWidth: 320,\n              idealHeight: 240,\n              minWidth: 240,\n              maxWidth: 320,\n              minHeight: 240,\n              maxHeight: 240\n            },\n            // Thresholds needed before these are considered \"activated\"\n            // - Ranges from 0 (not active) to 1 (fully active)\n            morphs: {\n              threshold: {\n                smileRight: 0,\n                smileLeft: 0,\n                browLeftDown: 0,\n                browRightDown: 0,\n                browLeftUp: 0,\n                browRightUp: 0,\n                eyeLeftClosed: 0,\n                eyeRightClosed: 0,\n                mouthOpen: 0,\n                mouthRound: 0,\n                upperLip: 0\n              }\n            }\n          }\n        })\n        // From inside a plugin\n        this.handsfree.use('lookHandsfree', ({weboji}) => {\n          if (!weboji?.rotation?.[0]) return\n          // Calculate rotation\n          this.rot = weboji.rotation\n\n          //document.getElementById(\"xposcube\").innerHTML = handPosition.x;\n          //document.getElementById(\"yposcube\").innerHTML = handPosition.y;\n          //document.getElementById(\"zposcube\").innerHTML = rot[2];\n        })\n        //handsfree.enablePlugins('browser');\n        var constraints = { audio: false, video: { width: 1280, height: 720 } };\n\n        navigator.mediaDevices.getUserMedia(constraints)\n        .then( mediaStream => {\n          console.log('camera go')\n          this.handsfree.start()\n\n          console.log(mediaStream)\n\n        })\n        .catch(function(err) {\n          console.log('camera null')\n          console.log(err)\n          // обработка ошибки\n        });\n      },\n\n///////////////////////////////////handsfree\n      animate: function () {\n        requestAnimationFrame(this.animate)\n        this.mesh.rotation.x += 0.01\n        this.mesh.rotation.y += 0.02\n\n        if(this.rot[1]){\n          TweenMax.to(this, 1, { movex:this.rot[1], movey:-this.rot[0] })\n          this.mesh.position.x = this.movex * 5;\n          this.mesh.position.y = this.movey * 5;\n          this.camera.position.y = -1;\n        }\n        this.renderer.render(this.scene, this.camera)\n      }\n    },\n    mounted () {\n      this.handcam()\n      this.init()\n      this.animate()\n    }\n  }\n</script>\n<style>\n  #container {\n    position: fixed;\n    top: 0;\n    left: 0;\n  }\n  :root {\n  --main-page-pad: 0px 45px 40px 125px;\n  --color-accent:  #F5B40D;\n  }\n  .handsfree-debugger{\n    display: none;\n  }\n\n  .maintitle{\n    left: 0px;\n    margin: var(--main-page-pad);\n    display: flex;\n    justify-content: space-between;\n    height: 100vh;\n    color: #fff;\n\n  }\n  .maintitle .text{\n    opacity: 0;\n    position: absolute;\n    transition: all 1s;\n  }\n  .maintitle .one{\n    margin-top: -9px;\n  }\n  .maintitle .two{\n    margin-top: -1px;\n  }\n  .maintitle .text p{\n    font-family: 'Goblin One';\n    font-size: 72px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 13vh;\n    letter-spacing: 0em;\n    text-align: left;\n    margin-top: 5%;\n    padding-left: var(--main-page-pad);\n  }\n\n  @-webkit-keyframes rotate {\n    100% {-webkit-transform: rotate(360deg);\n    -ms-transform: rotate(360deg);\n      transform: rotate(360deg);}\n  }\n  @keyframes rotate {\n    100% {-webkit-transform: rotate(360deg);\n    -ms-transform: rotate(360deg);\n      transform: rotate(360deg);}\n  }\n  .maintitle .scroll1container{\n    display: flex;\n    align-items: end;\n    padding-bottom: 5%;\n  }\n  .maintitle .scroll1{\n    background: url(\"../assets/textures/scroll1.svg\") no-repeat center center;\n    width: 80px;\n    height: 80px;\n    margin: 15px;\n     -webkit-animation: rotate 6s linear infinite;\n    animation: rotate 6s linear infinite;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}