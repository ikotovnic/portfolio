{"ast":null,"code":"//\n//\n//\n//\n//\n//\nimport * as Three from 'three';\nexport default {\n  name: 'ThreeTest',\n  data: function data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null,\n      mousex: 0,\n      mousey: 0\n    };\n  },\n  methods: {\n    init: function init() {\n      var container = document.getElementById('container');\n      this.camera = new Three.PerspectiveCamera(70, container.clientWidth / container.clientHeight, 0.01, 10);\n      this.camera.position.z = 4;\n      this.scene = new Three.Scene();\n      var geometry = new Three.BoxGeometry(0.2, 0.2, 0.2);\n      var material = new Three.MeshNormalMaterial();\n      this.mesh = new Three.Mesh(geometry, material);\n      this.scene.add(this.mesh);\n      this.renderer = new Three.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n      this.renderer.setSize(container.clientWidth, container.clientHeight);\n      this.renderer.autoClear = false;\n      this.renderer.setClearColor(0x000000, 0.0);\n      container.appendChild(this.renderer.domElement);\n    },\n    animate: function animate() {\n      requestAnimationFrame(this.animate);\n      this.mesh.rotation.x += 0.01;\n      this.mesh.rotation.y += 0.02;\n      this.renderer.render(this.scene, this.camera);\n    },\n    onDocumentMouseMove: function onDocumentMouseMove(event) {\n      mouseX = event.clientX - window.innerWidth / 2;\n      mouseY = event.clientY - window.screen.height / 2; //mycursor.x = event.clientX;\n      //mycursor.y = event.clientY;\n    }\n  },\n  mounted: function mounted() {\n    this.onDocumentMouseMove();\n    this.init();\n    this.animate();\n  }\n};","map":{"version":3,"mappings":";;;;;;AAOA;AAEA;AACAA,mBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,kBADA;AAEAC,iBAFA;AAGAC,oBAHA;AAIAC,gBAJA;AAKAC,eALA;AAMAC;AANA;AAQA,GAXA;AAYAC;AACAC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAAC;AAAAC;AAAA;AACA;AACA;AACA;AACAC;AACA,KAhBA;AAiBAC;AACAC;AACA;AACA;AACA;AACA,KAtBA;AAuBAC;AACAC;AACAC,wDAFA,CAGA;AACA;AACA;AA5BA,GAZA;AA0CAC,SA1CA,qBA0CA;AACA;AACA;AACA;AACA;AA9CA","names":["name","data","camera","scene","renderer","mesh","mousex","mousey","methods","init","antialias","alpha","container","animate","requestAnimationFrame","onDocumentMouseMove","mouseX","mouseY","mounted"],"sourceRoot":"src/views","sources":["AboutView.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"container\"></div>\n  </div>\n</template>\n\n<script>\n  import * as Three from 'three'\n\n  export default {\n    name: 'ThreeTest',\n    data () {\n      return {\n        camera: null,\n        scene: null,\n        renderer: null,\n        mesh: null,\n        mousex: 0,\n        mousey: 0\n      }\n    },\n    methods: {\n      init: function () {\n        let container = document.getElementById('container')\n        this.camera = new Three.PerspectiveCamera(70, container.clientWidth / container.clientHeight, 0.01, 10)\n        this.camera.position.z = 4;\n        this.scene = new Three.Scene()\n        let geometry = new Three.BoxGeometry(0.2, 0.2, 0.2)\n        let material = new Three.MeshNormalMaterial()\n        this.mesh = new Three.Mesh(geometry, material)\n        this.scene.add(this.mesh)\n\n        this.renderer = new Three.WebGLRenderer({antialias: true, alpha: true })\n        this.renderer.setSize(container.clientWidth, container.clientHeight)\n        this.renderer.autoClear = false;\n        this.renderer.setClearColor(0x000000, 0.0);\n        container.appendChild(this.renderer.domElement)\n      },\n      animate: function () {\n        requestAnimationFrame(this.animate)\n        this.mesh.rotation.x += 0.01\n        this.mesh.rotation.y += 0.02\n        this.renderer.render(this.scene, this.camera)\n      },\n      onDocumentMouseMove: function( event ) {\n          mouseX = ( event.clientX - window.innerWidth / 2 );\n          mouseY = ( event.clientY - window.screen.height / 2 );\n          //mycursor.x = event.clientX;\n          //mycursor.y = event.clientY;\n      }\n    },\n    mounted () {\n      this.onDocumentMouseMove()\n      this.init()\n      this.animate()\n    }\n  }\n</script>\n<style scoped>\n  #container {\n    height: 400px;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}